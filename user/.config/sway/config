# see /etc/sway/config for a default configuration
# see `man 5 sway` for a complete configuration reference.

# Mod1 = Alt
# Mod4 = Super
set $mod Mod4

# reload lthe configuration file
bindsym $mod+Ctrl+r reload

# exit sway (logs you out of your Wayland session)
bindsym $mod+Ctrl+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

bindsym $mod+Return exec alacritty -e tmux

seat seat0 xcursor_theme default 10

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# rotate screen
bindsym $mod+Ctrl+Up output LVDS-1 transform 0
bindsym $mod+Ctrl+Right output LVDS-1 transform 90
bindsym $mod+Ctrl+Down output LVDS-1 transform 180
bindsym $mod+Ctrl+Left output LVDS-1 transform 270
# swaymsg -t output LVDS-1 transform 0

# needed for gparted or kde partitionmanager, see https://wiki.archlinux.org/index.php/Polkit
# TODO: make systemd service
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

bindsym $mod+KP_1 workspace 1 ; exec notify-send -t 100 "1"
bindsym $mod+KP_2 workspace 2 ; exec notify-send -t 100 "2"
bindsym $mod+KP_3 workspace 3 ; exec notify-send -t 100 "3"
bindsym $mod+KP_4 workspace 4 ; exec notify-send -t 100 "4"
bindsym $mod+KP_5 workspace 5 ; exec notify-send -t 100 "5"
bindsym $mod+KP_6 workspace 6 ; exec notify-send -t 100 "6"
bindsym $mod+KP_7 workspace 7 ; exec notify-send -t 100 "7"
bindsym $mod+KP_8 workspace 8 ; exec notify-send -t 100 "8"
bindsym $mod+KP_9 workspace 9 ; exec notify-send -t 100 "9"
bindsym ctrl+KP_1 workspace 1 ; exec notify-send -t 100 "1"
bindsym ctrl+KP_2 workspace 2 ; exec notify-send -t 100 "2"
bindsym ctrl+KP_3 workspace 3 ; exec notify-send -t 100 "3"
bindsym ctrl+KP_4 workspace 4 ; exec notify-send -t 100 "4"
bindsym ctrl+KP_5 workspace 5 ; exec notify-send -t 100 "5"
bindsym ctrl+KP_6 workspace 6 ; exec notify-send -t 100 "6"
bindsym ctrl+KP_7 workspace 7 ; exec notify-send -t 100 "7"
bindsym ctrl+KP_8 workspace 8 ; exec notify-send -t 100 "8"
bindsym ctrl+KP_9 workspace 9 ; exec notify-send -t 100 "9"
bindsym $mod+1 workspace 1 ; exec notify-send -t 100 "1"
bindsym $mod+2 workspace 2 ; exec notify-send -t 100 "2"
bindsym $mod+3 workspace 3 ; exec notify-send -t 100 "3"
bindsym $mod+4 workspace 4 ; exec notify-send -t 100 "4"
bindsym $mod+5 workspace 5 ; exec notify-send -t 100 "5"
bindsym $mod+6 workspace 6 ; exec notify-send -t 100 "6"
bindsym $mod+7 workspace 7 ; exec notify-send -t 100 "7"
bindsym $mod+8 workspace 8 ; exec notify-send -t 100 "8"
bindsym $mod+9 workspace 9 ; exec notify-send -t 100 "9"

# move focused container to workspace
bindsym $mod+Shift+KP_1 move container to workspace 1
bindsym $mod+Shift+KP_2 move container to workspace 2
bindsym $mod+Shift+KP_3 move container to workspace 3
bindsym $mod+Shift+KP_4 move container to workspace 4
bindsym $mod+Shift+KP_5 move container to workspace 5
bindsym $mod+Shift+KP_6 move container to workspace 6
bindsym $mod+Shift+KP_7 move container to workspace 7
bindsym $mod+Shift+KP_8 move container to workspace 8
bindsym $mod+Shift+KP_9 move container to workspace 9
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9

# default workspace
workspace 1

# window style and colors
font pango:monospace 10
titlebar_border_thickness 1
titlebar_padding 1 1
default_border pixel 0

# keyboard layout
# alternatively use:
#   swaymsg -t get_inputs
#   swaymsg "input 1:1:AT_Translated_Set_2_keyboard xkb_layout ab"
#   swaymsg "input type:keyboard xkb_layout ab"
#   swaymsg "input type:keyboard xkb_layout ab(russian)"
# cat /usr/share/X11/xkb/rules/xorg.lst | grep compose
# cat /usr/share/X11/xkb/rules/xorg.lst | grep grp
# man xkeyboard-config
#
# keyboard modifiers are shared between devices of same layout and repeat-info
# see `man sway-input` → 'keyboard_grouping' and `sudo libinput debug-events`
#
input type:keyboard {
  xkb_layout ab,ab(russian)
  xkb_options grp:alt_altgr_toggle,compose:menu
  #    xkb_options grp:ctrls_toggle,compose:menu → ctrls_toggle doesnt work and additionally it breaks flutter app ctrl+click
  repeat_delay 50000
  repeat_rate 30
}

input type:touchpad {
  tap enabled
  dwt disabled
  natural_scroll enabled
}
# swaymsg -t get_inputs
# swaymsg -t get_outputs
# man 5 sway-input

# grep XF86MonBrightness /usr/share/X11/xkb/symbols/*
bindsym XF86MonBrightnessUp exec brillo -A 10
bindsym Shift+XF86MonBrightnessUp exec brillo -A 1
bindsym Ctrl+Shift+XF86MonBrightnessUp exec brillo -A .1
bindsym XF86MonBrightnessDown exec brillo -U 10
bindsym Shift+XF86MonBrightnessDown exec brillo -U 1
bindsym Ctrl+Shift+XF86MonBrightnessDown exec brillo -U .1

bindsym XF86AudioLowerVolume exec pactl set-sink-volume 0 -10%
bindsym Shift+XF86AudioLowerVolume exec pactl set-sink-volume 0 -2%
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume 0 +10%
bindsym Shift+XF86AudioRaiseVolume exec pactl set-sink-volume 0 +2%

# mute mic
bindsym $mod+m exec toggle_mic.py

bindsym XF86Sleep exec systemctl suspend
bindsym Ctrl+XF86Sleep exec systemctl hibernate

bindsym Print exec slurp | grim -g - ~/s.png
bindsym Shift+Print exec maim -s ~/s.png

bindsym KP_enter exec statuswindow.py
for_window [title="^statuswindow$"] floating enable; sticky enable

# kill focused window
bindsym Mod1+f4 kill

# godot open scene as floating
for_window [instance="Godot_Engine"] floating enable ; move position 600 300
for_window [title="[Extension Development Host]"] resize set width 30 ppt

# panda3d window as floating
for_window [title="Panda"] floating enable

# python plot window as floating
for_window [title="float"] floating enable

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Switch the current container between different layout styles
# bindsym $mod+s layout stacking
bindsym $mod+Ctrl+w layout tabbed
bindsym $mod+Ctrl+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+Ctrl+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# # Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+Shift+j move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
bindsym $mod+j scratchpad show

include /etc/sway/config.d/*

# export relevant environment variables
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

# launcher
exec systemd-cat -t synapse synapse -s
bindsym Ctrl+Space exec synapse
for_window [title="^synapse$"] border none

# clipboard manager
# sets floating only first time, see https://github.com/swaywm/sway/issues/6606
# window only updates on title change or restart, this doesn't work https://unix.stackexchange.com/a/635514/218172
for_window [class="^copyq$"] floating enable; sticky enable
bindsym $mod+V exec copyq toggle
# see https://github.com/hluk/CopyQ/issues/1882
exec copyq config hide_main_window true
exec systemd-cat -t copyq copyq

# redshift / night mode
exec systemd-cat -t gammastep gammastep

# wallpaper
exec systemd-cat -t multibg-sway multibg-sway ~/setup/wallpapers


exec notify-send -t 5000 "Digital World."
