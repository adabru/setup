# Setup & Configuration

## Arch Setup

Download arch.iso from https://www.archlinux.de/download

- For single boot, burn to stick with rufus dd-mode or `pv arch.iso > /dev/sdx`. For dualboot download windows.iso from https://www.microsoft.com/de-de/software-download/windows10ISO , install ventoy on your pendrive:

  ```sh
  sudo pacman -S ventoy
  lsblk
  sudo ventoy -i /dev/sdx
  sudo mount /dev/sdx1 /mnt
  cp ~/Downloads/<windows.iso> /mnt && sync
  cp ~/Downloads/<arch.iso> /mnt && sync
  sudo umount /mnt
  sudo eject /dev/sdx # may fail, doesn't matter
  ```

- Make backup via ~/bin/backup.py .
- Connect lan (if connected lateron, run `dhcpcd`).
- Boot from pendrive.

```sh
# following commands come from https://wiki.archlinux.de/title/Arch_Install_Scripts
loadkeys de-latin1
lsblk
cfdisk
  100MB fat32 /boot
  xGB btrfs /
  2xRAM swap
mkfs.vfat -F 32 /dev/sda1
mkfs.btrfs /dev/sda2
mount /dev/sda2 /mnt
mount /dev/sda1 /mnt/boot
mkswap /dev/sda3 swapon /dev/sda3

pacstrap /mnt base base-devel linux linux-firmware vim git networkmanager python bash-completion
genfstab -p /mnt >> /mnt/etc/fstab
arch-chroot /mnt
echo adabru-reserve > /etc/hostname
ln -s /usr/share/zoneinfo/Europe/Berlin /etc/localtime
# enable network time sync
timedatectl set-ntp true
# uncomment 'de_DE.UTF-8 UTF-8' and 'en_US.UTF-8 UTF-8' in /etc/locale.gen
locale-gen
echo LANG=en_US.UTF-8 > /etc/locale.conf
mkinitcpio -p linux
passwd # set root passwd
echo KEYMAP=de > /etc/vconsole.conf

pacman -S grub os-prober
# for UEFI:
pacman -S refind-efi
# see further below how to install

grub-install /dev/sda
# auto-detects windows via os-prober. if not, mount windows partition before
grub-mkconfig -o /boot/grub/grub.cfg
# for UEFI instead:
grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=Arch-Linux-grub

exit
umount /mnt/boot
umount /mnt
```

- poweroff
- eject pendrive and boot
- install windows
  - download and burn latest iso
  - install without internet to avoid updates
  - create a xGB partition during installation
- disable fastboot via `powercfg.cpl`
- update drivers with device manager
- boot via arch pendrive to restore boot loader:

```sh
lsblk
mount /dev/sda2 /mnt
mount /dev/sda1 /mnt/boot
arch-chroot /mnt
os-prober
# if it doesn't see windows:
mount /dev/sda4 /mnt
os-prober
grub-mkconfig -o /boot/grub/grub.cfg
```

- reboot

```sh
# enable wifi
systemctl enable NetworkManager.service
systemctl start NetworkManager
nmcli
nmcli device wifi
nmcli device wifi -a MY_SSID

useradd -m adabru
passwd adabru
EDITOR=vim visudo
su adabru

git clone https://github.com/adabru/setup
sudo loadkeys setup/kbd_ab.map
setup/bin/sync.py

# store keymap
sudo cp ~/setup/kbd_ab.map /usr/share/kbd/keymaps/ab.map
sudo sh -c "echo KEYMAP=ab > /etc/vconsole.conf"
~/setup/sync.py

# restore backup
pacman -S squashfuse rsync squashfs-tools ntfs-3g
# plugin drive
lsblk
sudo mount -o uid=adabru,ro /dev/sdb1 /mnt
unsquashfs -f -d ~ /mnt/20xx-xx-xx-backup.sqfs
# sqfs-mount.sh /mnt/20xx-xx-xx-backup.sqfs
# rsync -r --info=progress2 ~/mnt/20xx-xx-xx-backup.sqfs/xx ~/xx
# rsync -r --info=progress2 --exclude '*/node_modules/' ~/mnt/20xx-xx-xx-backup.sqfs/xx ~/xx

# wlan
# check wlan on/off switch
rfkill list all
nmcli device wifi
nmcli device wifi connect -a your_ap_name_ssid
nmcli connection

# update system
pacman -S reflector
mirror

# number of installed packages
pacman -Qq | wc -l

# install terminal
pacman -S alacritty

# setup xkb layout
sudo cp ~/setup/xkb_ab /usr/share/X11/xkb/symbols/ab

# install sway
# https://wiki.archlinux.org/index.php/Sway#Installation
# https://github.com/swaywm/sway/wiki
pacman -S sway xorg-server-xwayland
export XKB_DEFAULT_LAYOUT=ab; sway
# setxkbmap -layout de
# setxkbmap -layout ab

# install trizen
cd ~/repo
git clone https://aur.archlinux.org/trizen.git
cd trizen
makepkg -si
# in /etc/pacman.conf :
# uncomment option 'Color'
# uncomment source [multilib]

pacman -S openssh
pacman -S albert muparser
pacman -S nm-connection-editor
t -S vivaldi
# proprietary codecs
sudo /opt/vivaldi/update-ffmpeg
sudo /opt/vivaldi/update-widevine

# brightness
t -S brillo
usermod -a -G video adabru
sudo cp setup/udev_backlight.rules /etc/udev/rules.d/backlight.rules
grep XF86MonBrightness /usr/share/X11/xkb/symbols/*

# autologin
# https://wiki.archlinux.org/index.php/Getty#Virtual_console
# https://wiki.archlinux.org/index.php/Systemd#Editing_provided_units
# sudo systemctl edit getty^TAB
sudo mkdir /etc/systemd/system/getty@tty1.service.d/
sudo cp ~/setup/getty.conf /etc/systemd/system/getty@tty1.service.d/override.conf
sudo mkdir /etc/systemd/system/getty@tty3.service.d/
sudo cp ~/setup/getty.conf /etc/systemd/system/getty@tty3.service.d/override.conf
systemctl daemon-reload

# partition managing
pacman -S partitionmanager polkit-gnome
# restart sway
# create 50gb XFS partition with label VM for virtual drives
sudo sh -c "echo \"/dev/disk/by-label/VM /home/adabru/vm xfs users 0 0\" >> /etc/fstab"
# for gparted:
pacman -S gparted xorg-xhost
# restart sway

mkdir ~/vm
sudo mount -a
# navigate to backup
sudo mount /dev/disk/by-label/500_LapStore /mnt
```

## Further Software

- setup other applications

```sh
# i tried community/code twice, but switched to insiders due to issues (the second time marketplace didn't work)
t -S visual-studio-code-insiders

git config --global user.email b.brunnmeier@gmx.de
git config --global user.name adabru
git config --global pull.ff only

pacman -S mpv

t -S nautilus nautilus-open-terminal gvfs-smb gvfs-mtp

# access documentation on 127.0.7.1:7000 via doc/
pacman -S nftables
echo "127.0.7.1       doc" | sudo tee --append /etc/hosts
sudo cp ~/setup/nftables.conf /etc
sudo systemctl enable nftables
sudo systemctl restart nftable

# refind
pacman -S refind-efi
t -S memtest86-efi
refind-install
# if installing from live-usb system with chroot, /boot/refind_linux.conf must be changed
# see https://wiki.archlinux.org/index.php/REFInd
sudo cp ~/setup/os_grub.png /boot/EFI/refind/icons/os_grub.png
sudo cp /usr/share/memtest86-efi/bootx64.efi /boot/EFI/tools
sudo cp ~/setup/refind.conf /boot/EFI/refind/refind.conf
# change PARTUUID to your root partition
blkid
sudo vim /boot/EFI/refind/refind.conf
poweroff --reboot
# if some other installation or package has overwritten the boot order, use:
# sudo refind-mkdefault

# messaging
t -S thunderbird pidgin slack-libpurple-git telegram-purple-git purple-matrix-git purple-discord-git
# gmx https://support.gmx.com/pop-imap/imap/outlook.html
# gmail
# rwth https://www.welcome.itc.rwth-aachen.de/en/email.htm
# pidgin:
#   FB https://facebook.com https://en.facebookbrand.com/wp-content/uploads/2016/05/flogo_rgb_hex-brc-site-250.png
#   MindCloud Slack mind-cloud
#   Fablab Slack fablab-erkelenz
#   i9 RocketChat https://rclufgi9.informatik.rwth-aachen.de/home
#   Telegram
#   Discord "HÃ¼ckelhoven Skills"

pacman -S geany

# font
# see font coverage on https://www.fileformat.info/info/unicode/block/miscellaneous_symbols_and_pictographs/fontsupport.htm
t -S ttf-symbola ttf-dejavu ttf-unifont gucharmap

# check Wayland/XWayland
# https://fedoraproject.org/wiki/How_to_debug_Wayland_problems
# 1. check with QT_QPA_PLATFORM=xcb or other env var if known
# 2. check on other VTE ctrl+alt+fx with `weston-launch` (ctrl+alt+backspace to quit)
# 3. use startxfce4
xlsclients
xwininfo

# eduroam
# connect to mops
nm-connection-editor
# SSID:eduroam, WPA2, PWD, username, password
nmcli connection up id eduroam

# create ssh-key for github and gitlab
# eval "$(ssh-agent -s)"
# ssh-add -l
ssh-keygen -t rsa -C "adam.brunnmeier@rwth-aachen.de" -b 4096
cat ~/.ssh/id_rsa.pub
# add to https://gitlab.com and https://github.com
ssh -T git@github.com
ssh -T git@gitlab.com

# audio
pacman -S alsa-utils pulseaudio pavucontrol evtest
# internal microphone boost is not saved per default because pulseaudio resets it
# see https://wiki.archlinux.org/index.php/PulseAudio/Troubleshooting#Pulse_overwrites_ALSA_settings)
# and https://wiki.archlinux.org/index.php/PulseAudio/Troubleshooting#Microphone_distorted_due_to_automatic_adjustment
# the workaround vie setting the [Element * Mic Boost] volume to 50 in sudo vim /usr/share/alsa-card-profile/mixer/paths/analog-input-mic.conf
# failed to work, too; so a daemon is used in the background to detect headset plugin and set the value
usermod -a -G input adabru
alsamixer
speaker-test
# reboot for pulseaudio to start
# enable audio loopback device with:
sudo modprobe snd-aloop
# route input to output, see https://thelinuxexperiment.com/pulseaudio-monitoring-your-line-in-interface/
pactl unload-module module-loopback
pactl load-module module-loopback latency_msec=1
# alternatively, see https://gist.github.com/ericbolo/1261438048147b97316ff65f1ee
# pactl list sources
# pactl list sinks short
# pacat -r --latency-msec=1 -d alsa_input.pci-0000_00_1b.0.analog-stereo | pacat -p --latency-msec=1 -d alsa_output.pci-0000_00_1b.0.analog-stereo

aplay -l
arecord -l
alsaloop -C hw:0,0 -P hw:0,0


# radio
t -S goodvibes
# find radio stations e.g. on https://www.radio.de/genre/film-and-musical

# tmux
# wl-clipboard as temporary workaround for https://github.com/swaywm/sway/issues/926
# ctrl+shift+insert as temporary workaround for https://github.com/thestinger/termite/issues/645
pacman -S tmux wl-clipboard

# bluetooth
pacman -S bluez bluez-utils pulseaudio-bluetooth blueman
sudo systemctl enable bluetooth
sudo systemctl restart bluetooth
bluetoothctl power on
bluetoothctl devices
blueman

# disable wifi card if there are problems
lspci -k
sudo modprobe -r ath9k
# to make it permanent
sudo sh -c 'echo "blacklist ath9k" > /etc/modprobe.d/modprobe.conf'

# printer
pacman -S cups cups-pdf
t -S brother-mfc-9332cdw
systemctl enable org.cups.cupsd.service
systemctl start org.cups.cupsd.service
# setup printer at http://localhost:631/admin

# pdf reader
pacman -S evince

# screenshot
pacman -S slurp grim eog

# screencast
t -S obs-studio wlrobs-hg
# then select "Wayland output (scpy)" for the whole screen or "Window Capture (Xcomposite)" for X windows

# android emulator
t -S jdk8-openjdk android-sdk
export PATH="/opt/android-sdk/tools/bin:$PATH"
sdkmanager --list
# https://wiki.archlinux.org/index.php/Android#Android_Studio
sudo chown -R adabru:adabru /opt/android-sdk/
# see https://developer.android.com/about/dashboards/
# increase /tmp size as sdkmanager takes a lot of it
# 5G of free ram is needed, as sdkmanager downloads and unzips to /tmp
sudo mount -o remount,size=5G /tmp/
touch ~/.android/repositories.cfg
sdkmanager "system-images;android-23;google_apis;x86_64"
avdmanager create avd --name myandroid -k "system-images;android-23;google_apis;x86_64"
avdmanager list avd
sdkmanager emulator
t -S android-sdk-platform-tools
# https://developer.android.com/studio/run/emulator-commandline
# https://developer.android.com/studio/run/emulator-comparison
emulator @myandroid
adb install ~/portable/Aktuell/Android/apps/WhatsApp.apk
# for WhatsApp-Web, connect (compatible) webcam and run
emulator @myandroid -webcam-list
emulator @myandroid -camera-back webcam1

# cloud storage
pacman -S rclone
rclone config
# dropbox, google
rclone lsd dropbox:
rclone ls dropbox:
cd ~/portable/cloud/dropbox
rclone -P sync dropbox:Gemeindelieder ./Gemeindelieder
rclone lsd google:

# ftp
usermod -a -G ftp adabru
pacman -S bftpd
sudo chmod 770 /srv/ftp
sudo bftpd -D # share /

t -S stupid-ftpd
ftp_here.sh

# anti webspam
t -S hosts-update
hosts-update

# opendns + hosts
t -S ddclient
sudo sh -c 'echo "
127.0.0.1   localhost
::1         localhost
127.0.7.1   doc
" > /etc/hosts.local'
sudo hosts-update
sync.py
sudo systemctl restart NetworkManager
# check `cat /etc/resolv.conf`
# see https://support.opendns.com/hc/en-us/articles/227987727-Linux-IP-Updater-for-Dynamic-Networks
sudo sh -c 'echo "
##
## OpenDNS.com account-configuration
##
protocol=dyndns2
use=web, web=myip.dnsomatic.com
ssl=yes
server=updates.opendns.com
login=opendns_username
password=âopendns_passwordâ
opendns_network_label
" > /etc/ddclient.conf'
# set username and password
sudo systemctl start ddclient

# setup IPv6 tunnel with hurricane electrics (free)
# login and create tunnel
# save commands to ~/bin/tunnel_ipv6.sh
# replace local ip4 from router by local ip4 of laptop, e.g. 192.168.178.41
echo 'echo "using wlan"' >> ~/bin/tunnel_ipv6.sh
sudo tunnel_ipv6.sh
# remove with `sudo ip tunnel del he-ipv6`


# node
pacman -S nodejs yarn

# arduino
pacman -S arduino
# install arduino extension in vscode
sudo usermod -a -G uucp,lock adabru
# logout â login
echo "ciao" > /dev/ttyUSB0
# see if lights are blinking
# set "port": "/dev/ttyUSB0" in arduino.json
# "open serial port" in vscode didn't work, using screen instead (cancel with CTRL+A K)
pacman -S screen
screen /dev/ttyUSB0 19200

# wine
pacman -S wine winetricks
winetricks dotnet452 corefonts

# mingw
# add to /etc/pacman.conf :
# [ownstuff]
# # see https://github.com/Martchus/PKGBUILDs/issues/76
# SigLevel = Never
# Server = https://ftp.f3l.de/~martchus/$repo/os/$arch
# Server = https://martchus.no-ip.biz/repo/arch/$repo/os/$arch
t -Sy
t -S mingw-w64

pacman -S youtube-dl # ipython graphicsmagick

# virtualenv + pip if needed, see https://virtualenv.pypa.io/en/latest/installation.html
wget -O- https://pypi.python.org/packages/source/v/virtualenv/virtualenv-16.0.0.tar.gz | tar xz
cd virtualenv-*
python setup.py install --prefix ~/.virtualenv
cd ~/.virtualenv
export PYTHONPATH=./lib/python3.7/site-packages
./bin/virtualenv -p python3 .
. ./bin/activate


# gamepad: nintendo switch pro controller
## Alternative A
# https://wiki.archlinux.org/title/Gamepad
gpg --keyserver keyserver.ubuntu.com --recv-key E23B7E70B467F0BF
t -S hid-nintendo-dkms xf86-input-joystick ydotool
# https://gamepad-tester.com
systemctl --user enable --now ydotool
ydotool mousemove --absolute 100 100
## Alternative B
t -S sc-controller
## Alternative C
# https://wiki.archlinux.org/title/Gamepad#iPEGA-9017s_and_other_Bluetooth_gamepads
# https://www.reddit.com/r/RetroPie/comments/67lhv3/nintendo_switch_pro_controller_is_fully_working/
t -S xboxdrv
sudo cp ~/setup/gamepad/udev_bt_switch_pro.rules /etc/udev/rules.d/99-bt_switch_pro.rules
sudo udevadm control --reload-rules
xboxdrv_switch_pro.conf
xboxdrv --evdev /dev/btjoy --config .config/xboxdrv/ipega.conf
```

- see <https://wiki.archlinux.org/index.php/System_maintenance>:
  - `systemctl --failed`
  - `journalctl -p 3 -xb`
  - update system with: `update` (pacman) or `tupdate` (trizen)

## Postinstall Windows

Prepare an unallocated space on your hard drive for Windows.

Didn't try yet it could be possible to install via kvm: <https://askubuntu.com/a/249169/452398>. Possibly with help of sysprep.

Else create a dual boot usb stick (s. above) and do the default Windows installation where you can select the prepared unallocated space for installation. Because of efi I was even able to boot linux from the hard disk afterwards with the bios boot device selection.
