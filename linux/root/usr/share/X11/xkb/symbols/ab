// AdaBru's custom layouts
//
// sources:
// http://www.charvolant.org/~doug/xkb/html/node5.html#SECTION00058300000000000000
// http://stackoverflow.com/questions/32822857/how-to-emulate-integrated-numeric-keypad-cursor-keys-in-linux
// https://unix.stackexchange.com/a/65614/218172

default
xkb_symbols "basic" {

  name[Group1] = "German (adabru)";

  include "de(neo)"
  include "ab(neo_extension)"

  key <ESC> {
    type[Group1]="PC_CONTROL_LEVEL2",
    symbols[Group1]= [ Escape, ISO_Next_Group ]
  };

  key <AD01> { [          q,          Q ] };
  key <AD02> { [          w,          W, NoSymbol, Greek_omega ] };
  key <AD03> { [          e,          E, NoSymbol, Greek_epsilon ] };
  key <AD04> { [          r,          R, NoSymbol, Greek_rho ] };
  key <AD05> { [          t,          T, NoSymbol, Greek_tau ] };
  key <AD06> { [          z,          Z, NoSymbol, Greek_zeta ] };
  key <AD07> { [          u,          U ] };
  key <AD08> { [          i,          I, NoSymbol, Greek_iota ] };
  key <AD09> { [          o,          O, NoSymbol, Greek_omicron ] };
  key <AD10> { [          p,          P, NoSymbol, Greek_pi ] };
  key <AD11> { [ udiaeresis, Udiaeresis ] };
  key <AD12> { [ ssharp ] };

  key <AC01> { [          a,          A, NoSymbol, Greek_alpha ] };
  key <AC02> { [          s,          S, NoSymbol, Greek_sigma ] };
  key <AC03> { [          d,          D, NoSymbol, Greek_delta ] };
  key <AC04> { [          f,          F, NoSymbol, Greek_phi ] };
  key <AC05> { [          g,          G, NoSymbol, Greek_gamma ] };
  key <AC06> { [          h,          H, NoSymbol, Greek_psi ] };
  key <AC07> { [          j,          J, NoSymbol, Greek_theta ] };
  key <AC08> { [          k,          K, NoSymbol, Greek_kappa ] };
  key <AC09> { [          l,          L, NoSymbol, Greek_lambda ] };
  key <AC10> { [ odiaeresis, Odiaeresis ] };
  key <AC11> { [ adiaeresis, Adiaeresis ] };

  key <AB01> { [          y,          Y, NoSymbol, Greek_upsilon ] };
  key <AB02> { [          x,          X, NoSymbol, Greek_xi ] };
  key <AB03> { [          c,          C, NoSymbol, Greek_chi ] };
  key <AB04> { [          v,          V ] };
  key <AB05> { [          b,          B, NoSymbol, Greek_beta ] };
  key <AB06> { [          n,          N, NoSymbol, Greek_nu ] };
  key <AB07> { [          m,          M, NoSymbol, Greek_mu ] };
};

partial
xkb_symbols "neo_extension" {
  // see `/usr/share/X11/xkb/symbols/de`

  // key <AD01> { actions = [ NoAction(), NoAction(), NoAction(), NoAction(), RedirectKey(key=<PGUP>), RedirectKey(key=<PGUP>), NoAction(), NoAction() ] };
  // key <AD02> { actions = [ NoAction(), NoAction(), NoAction(), NoAction(), RedirectKey(key=<AB02>), RedirectKey(key=<AB02>), NoAction(), NoAction() ] };
  // key <AD02> { actions = [ NoAction(), NoAction(), NoAction(), NoAction(), RedirectKey(key=<BKSP>), RedirectKey(key=<BKSP>), NoAction(), NoAction() ] };
  // key <AD03> { actions = [ NoAction(), NoAction(), NoAction(), NoAction(), RedirectKey(key=<UP>,clearmods=Mod3), RedirectKey(key=<UP>,clearmods=Mod3), NoAction(), NoAction() ] };
  // key <AD04> { actions = [ NoAction(), NoAction(), NoAction(), NoAction(), RedirectKey(key=<DELE>), RedirectKey(key=<DELE>), NoAction(), NoAction() ] };
  // key <AD05> { actions = [ NoAction(), NoAction(), NoAction(), NoAction(), RedirectKey(key=<PGDN>), RedirectKey(key=<PGDN>), NoAction(), NoAction() ] };

  // key <AC01> { actions = [ NoAction(), NoAction(), NoAction(), NoAction(), RedirectKey(key=<HOME>), RedirectKey(key=<HOME>), NoAction(), NoAction() ] };
  // key <AC02> { actions = [ NoAction(), NoAction(), NoAction(), NoAction(), RedirectKey(key=<LEFT>,clearmods=Mod3), RedirectKey(key=<LEFT>,clearmods=Mod3), NoAction(), NoAction() ] };
  // key <AC03> { actions = [ NoAction(), NoAction(), NoAction(), NoAction(), RedirectKey(key=<DOWN>,clearmods=Mod3), RedirectKey(key=<DOWN>,clearmods=Mod3), NoAction(), NoAction() ] };
  // key <AC04> { actions = [ NoAction(), NoAction(), NoAction(), NoAction(), RedirectKey(key=<RGHT>,clearmods=Mod3), RedirectKey(key=<RGHT>,clearmods=Mod3), NoAction(), NoAction() ] };
  // key <AC05> { actions = [ NoAction(), NoAction(), NoAction(), NoAction(), RedirectKey(key=<END>), RedirectKey(key=<END>), NoAction(), NoAction() ] };

  // key <AB01> { actions = [ NoAction(), NoAction(), NoAction(), NoAction(), RedirectKey(key=<ESC>), RedirectKey(key=<ESC>), NoAction(), NoAction() ] };
  // key <AB02> { actions = [ NoAction(), NoAction(), NoAction(), NoAction(), RedirectKey(key=<TAB>,clearmods=Mod3), RedirectKey(key=<TAB>,clearmods=Mod3), NoAction(), NoAction() ] };
  // key <AB03> { actions = [ NoAction(), NoAction(), NoAction(), NoAction(), RedirectKey(key=<INS>), RedirectKey(key=<INS>), NoAction(), NoAction() ] };
  // key <AB04> { actions = [ NoAction(), NoAction(), NoAction(), NoAction(), RedirectKey(key=<RTRN>), RedirectKey(key=<RTRN>), NoAction(), NoAction() ] };
  // key <AB05> { actions = [ NoAction(), NoAction(), NoAction(), NoAction(), RedirectKey(key=<UNDO>), RedirectKey(key=<REDO>), NoAction(), NoAction() ] };
};

partial
xkb_symbols "russian" {

  name[Group1] = "Russian (adabru)";

  include "de(neo)"
  include "ab(neo_extension)"

  // cf. `/usr/share/X11/xkb/symbols/ru(phonetic)`

  // key <TLDE> { [     Cyrillic_io,     Cyrillic_IO ] };
  // key <AD01> { [ Cyrillic_shorti, Cyrillic_SHORTI ] };
  // key <AD02> { [    Cyrillic_tse,    Cyrillic_TSE ] };
  // key <AD03> { [      Cyrillic_u, Cyrillic_U ] };
  // key <AD04> { [     Cyrillic_ka,     Cyrillic_KA ] };
  // key <AD05> { [     Cyrillic_ie,     Cyrillic_IE ] };
  // key <AD06> { [     Cyrillic_en,     Cyrillic_EN ] };
  // key <AD07> { [    Cyrillic_ghe,    Cyrillic_GHE ] };
  // key <AD08> { [    Cyrillic_sha,    Cyrillic_SHA ] };
  // key <AD09> { [  Cyrillic_shcha,  Cyrillic_SHCHA ] };
  // key <AD10> { [     Cyrillic_ze,     Cyrillic_ZE ] };
  // key <AD11> { [     Cyrillic_ha,     Cyrillic_HA ] };
  // key <AD12> { [Cyrillic_hardsign,Cyrillic_HARDSIGN ] };
  // key <AC01> { [     Cyrillic_ef,     Cyrillic_EF ] };
  // key <AC02> { [   Cyrillic_yeru,   Cyrillic_YERU ] };
  // key <AC03> { [     Cyrillic_ve,     Cyrillic_VE ] };
  // key <AC04> { [      Cyrillic_a, Cyrillic_A ] };
  // key <AC05> { [     Cyrillic_pe,     Cyrillic_PE ] };
  // key <AC06> { [     Cyrillic_er,     Cyrillic_ER ] };
  // key <AC07> { [      Cyrillic_o, Cyrillic_O ] };
  // key <AC08> { [     Cyrillic_el,     Cyrillic_EL ] };
  // key <AC09> { [     Cyrillic_de,     Cyrillic_DE ] };
  // key <AC10> { [    Cyrillic_zhe,    Cyrillic_ZHE ] };
  // key <AC11> { [      Cyrillic_e, Cyrillic_E ] };
  // key <AB01> { [     Cyrillic_ya,     Cyrillic_YA ] };
  // key <AB02> { [    Cyrillic_che,    Cyrillic_CHE ] };
  // key <AB03> { [     Cyrillic_es,     Cyrillic_ES ] };
  // key <AB04> { [     Cyrillic_em,     Cyrillic_EM ] };
  // key <AB05> { [      Cyrillic_i, Cyrillic_I ] };
  // key <AB06> { [     Cyrillic_te,     Cyrillic_TE ] };
  // key <AB07> { [Cyrillic_softsign,Cyrillic_SOFTSIGN ] };
  // key <AB08> { [     Cyrillic_be,     Cyrillic_BE ] };
  // key <AB09> { [     Cyrillic_yu,     Cyrillic_YU ] };


  key <AD01> { [       Cyrillic_ya,       Cyrillic_YA  ] };
  key <AD02> { [       Cyrillic_ve,       Cyrillic_VE  ] };
  key <AD03> { [       Cyrillic_ie,       Cyrillic_IE,        Cyrillic_io,     Cyrillic_IO ] };
  key <AD04> { [       Cyrillic_er,       Cyrillic_ER  ] };
  key <AD05> { [       Cyrillic_te,       Cyrillic_TE,        Cyrillic_che,      Cyrillic_CHE  ] };
  key <AD06> { [       Cyrillic_ze,       Cyrillic_ZE,        Cyrillic_zhe,      Cyrillic_ZHE  ] };
  key <AD07> { [        Cyrillic_u,        Cyrillic_U  ] };
  key <AD08> { [        Cyrillic_i,        Cyrillic_I,     Cyrillic_shorti,   Cyrillic_SHORTI  ] };
  key <AD09> { [        Cyrillic_o,        Cyrillic_O  ] };
  key <AD10> { [       Cyrillic_pe,       Cyrillic_PE  ] };
  // key <AD11> { [ udiaeresis, Udiaeresis ] };
  // key <AD12> { [ ssharp ] };

  key <AC01> { [        Cyrillic_a,        Cyrillic_A  ] };
  key <AC02> { [       Cyrillic_es,       Cyrillic_ES,        Cyrillic_sha,      Cyrillic_SHA  ] };
  key <AC03> { [       Cyrillic_de,       Cyrillic_DE  ] };
  key <AC04> { [       Cyrillic_ef,       Cyrillic_EF  ] };
  key <AC05> { [      Cyrillic_ghe,      Cyrillic_GHE  ] };
  key <AC06> { [       Cyrillic_ha,       Cyrillic_HA  ] };
  key <AC07> { [       Cyrillic_yu,       Cyrillic_YU  ] };
  key <AC08> { [       Cyrillic_ka,       Cyrillic_KA  ] };
  key <AC09> { [       Cyrillic_el,       Cyrillic_EL  ] };
  // key <AC10> { [ odiaeresis, Odiaeresis ] };
  key <AC11> { [      Cyrillic_e, Cyrillic_E ] };

  key <AB01> { [     Cyrillic_yeru,     Cyrillic_YERU  ] };
  key <AB02> { [ Cyrillic_softsign, Cyrillic_SOFTSIGN,  Cyrillic_hardsign,Cyrillic_HARDSIGN ] };
  key <AB03> { [      Cyrillic_tse,      Cyrillic_TSE,    Cyrillic_shcha,  Cyrillic_SHCHA ] };
  // key <AB04> { [          v,          V ] };
  key <AB05> { [       Cyrillic_be,       Cyrillic_BE  ] };
  key <AB06> { [       Cyrillic_en,       Cyrillic_EN  ] };
  key <AB07> { [       Cyrillic_em,       Cyrillic_EM  ] };

};

partial
xkb_symbols "persian" {

  name[Group1] = "Persian (adabru)";

  include "de(neo)"
  include "ab(neo_extension)"

  // see `/usr/share/X11/xkb/symbols/ir(pes_part_basic)`

  // Persian letters and symbols
  key <AD01> { [ Arabic_dad,   Arabic_sukun  ] };
  key <AD02> { [ Arabic_sad,   Arabic_dammatan ] };
  key <AD03> { [ Arabic_theh,  Arabic_kasratan ] };
  key <AD04> { [ Arabic_qaf,   Arabic_fathatan ] };
  key <AD05> { [ Arabic_feh,   Arabic_damma ] };
  key <AD06> { [ Arabic_ghain, Arabic_kasra ] };
  key <AD07> { [ Arabic_ain,   Arabic_fatha ] };
  key <AD08> { [ Arabic_heh,   Arabic_shadda ] };
  key <AD09> { [ Arabic_khah  ] };
  key <AD10> { [ Arabic_hah   ] };
  key <AD11> { [ Arabic_jeem  ] };
  key <AD12> { [ Arabic_tcheh ] };

  key <AC01> { [ Arabic_sheen, Arabic_hamzaonwaw ] };
  key <AC02> { [ Arabic_seen,  Arabic_hamzaonyeh ] };
  key <AC03> { [ Farsi_yeh,    Arabic_yeh ] };
  key <AC04> { [ Arabic_beh,   Arabic_hamzaunderalef ] };
  key <AC05> { [ Arabic_lam,   Arabic_hamzaonalef ] };
  key <AC06> { [ Arabic_alef,  Arabic_maddaonalef, Arabic_question_mark ] };
  key <AC07> { [ Arabic_teh,   Arabic_tehmarbuta ] };
  key <AC08> { [ Arabic_noon ] };
  key <AC09> { [ Arabic_meem ] };
  key <AC10> { [ Arabic_keheh ] };
  key <AC11> { [ Arabic_gaf,   Arabic_semicolon ] };

  key <AB01> { [ Arabic_zah,  Arabic_kaf ] };
  key <AB02> { [ Arabic_tah,  0x1000653 ] };
  key <AB03> { [ Arabic_zain, Arabic_jeh ] };
  key <AB04> { [ Arabic_ra,   Arabic_superscript_alef ] };
  key <AB05> { [ Arabic_thal ] };
  key <AB06> { [ Arabic_dal,  Arabic_hamza_above,  Arabic_hamza_below ] };
  key <AB07> { [ Arabic_peh,  Arabic_hamza ] };
  key <AB08> { [ Arabic_waw,  Arabic_comma  ] };
};
