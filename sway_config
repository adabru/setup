# see /etc/sway/config for a default configuration
# see `man 5 sway` for a complete configuration reference.

# Mod1 = Alt
# Mod4 = Super
set $mod Mod4

# reload lthe configuration file
bindsym $mod+Ctrl+c reload

bindsym $mod+Return exec alacritty -e tmux
# workaround for now, see https://unix.stackexchange.com/a/598055/218172
# timeout as albert reports "can't connect to display" otherwise
exec sleep .5 && systemctl --user start adabru.albert
bindsym Ctrl+Space exec albert toggle

seat seat0 xcursor_theme default 10

bindsym $mod+s focus left
bindsym $mod+d focus down
bindsym $mod+e focus up
bindsym $mod+f focus right

bindsym $mod+Shift+s move left
bindsym $mod+Shift+d move down
bindsym $mod+Shift+e move up
bindsym $mod+Shift+f move right

# workaround for clipboard issue when copy-pasting from xwayland to wayland
bindsym Ctrl+Shift+C exec wl-paste -n | wl-copy

output * bg /home/adabru/setup/desktop.jpg fill
# swaymsg -t get_outputs
# swaymsg output "LVDS-1" scale .5
# swaymsg output "LVDS-1" scale 2

# rotate screen
bindsym $mod+Ctrl+Up output LVDS-1 transform 0
bindsym $mod+Ctrl+Right output LVDS-1 transform 90
bindsym $mod+Ctrl+Down output LVDS-1 transform 180
bindsym $mod+Ctrl+Left output LVDS-1 transform 270
# swaymsg -t output LVDS-1 transform 0


# needed for gparted or kde partitionmanager, see https://wiki.archlinux.org/index.php/Polkit
# TODO: make systemd service
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# doc
# exec "cd home/adabru/repo/adabru-markup/ && ./html/js/server.ls -d ~/portable/documentation --cache ~/.cache/adabru-markup > /home/adabru/debug"

bindsym $mod+KP_1 workspace 1 ; exec notify-send -t 100 "1" ; client.focused #FF0000 #FF0000 #FF0000
bindsym $mod+KP_2 workspace 2 ; exec notify-send -t 100 "2" ; client.focused #00FF00 #00FF00 #00FF00
bindsym $mod+KP_3 workspace 3 ; exec notify-send -t 100 "3" ; client.focused #0000FF #0000FF #0000FF
bindsym $mod+KP_4 workspace 4 ; exec notify-send -t 100 "4" ; client.focused #FFFF00 #FFFF00 #FFFF00
bindsym $mod+KP_5 workspace 5 ; exec notify-send -t 100 "5" ; client.focused #FF00FF #FF00FF #FF00FF
bindsym $mod+KP_6 workspace 6 ; exec notify-send -t 100 "6" ; client.focused #00FFFF #00FFFF #00FFFF
bindsym $mod+KP_7 workspace 7 ; exec notify-send -t 100 "7" ; client.focused #FFFFFF #FFFFFF #FFFFFF
bindsym $mod+KP_8 workspace 8 ; exec notify-send -t 100 "8" ; client.focused #8800FF #8800FF #8800FF
bindsym $mod+KP_9 workspace 9 ; exec notify-send -t 100 "9" ; client.focused #000000 #000000 #000000
bindsym $mod+KP_0 workspace 10 ; exec notify-send -t 100 "10" ; client.focused #000000 #000000 #000000
bindsym ctrl+KP_1 workspace 1 ; exec notify-send -t 100 "1" ; client.focused #FF0000 #FF0000 #FF0000
bindsym ctrl+KP_2 workspace 2 ; exec notify-send -t 100 "2" ; client.focused #00FF00 #00FF00 #00FF00
bindsym ctrl+KP_3 workspace 3 ; exec notify-send -t 100 "3" ; client.focused #0000FF #0000FF #0000FF
bindsym ctrl+KP_4 workspace 4 ; exec notify-send -t 100 "4" ; client.focused #FFFF00 #FFFF00 #FFFF00
bindsym ctrl+KP_5 workspace 5 ; exec notify-send -t 100 "5" ; client.focused #FF00FF #FF00FF #FF00FF
bindsym ctrl+KP_6 workspace 6 ; exec notify-send -t 100 "6" ; client.focused #00FFFF #00FFFF #00FFFF
bindsym ctrl+KP_7 workspace 7 ; exec notify-send -t 100 "7" ; client.focused #FFFFFF #FFFFFF #FFFFFF
bindsym ctrl+KP_8 workspace 8 ; exec notify-send -t 100 "8" ; client.focused #8800FF #8800FF #8800FF
bindsym ctrl+KP_9 workspace 9 ; exec notify-send -t 100 "9" ; client.focused #000000 #000000 #000000
bindsym ctrl+KP_0 workspace 10 ; exec notify-send -t 100 "10" ; client.focused #000000 #000000 #000000
bindsym $mod+1 workspace 1 ; exec notify-send -t 100 "1" ; client.focused #FF0000 #FF0000 #FF0000
bindsym $mod+2 workspace 2 ; exec notify-send -t 100 "2" ; client.focused #00FF00 #00FF00 #00FF00
bindsym $mod+3 workspace 3 ; exec notify-send -t 100 "3" ; client.focused #0000FF #0000FF #0000FF
bindsym $mod+4 workspace 4 ; exec notify-send -t 100 "4" ; client.focused #FFFF00 #FFFF00 #FFFF00
bindsym $mod+5 workspace 5 ; exec notify-send -t 100 "5" ; client.focused #FF00FF #FF00FF #FF00FF
bindsym $mod+6 workspace 6 ; exec notify-send -t 100 "6" ; client.focused #00FFFF #00FFFF #00FFFF
bindsym $mod+7 workspace 7 ; exec notify-send -t 100 "7" ; client.focused #FFFFFF #FFFFFF #FFFFFF
bindsym $mod+8 workspace 8 ; exec notify-send -t 100 "8" ; client.focused #8800FF #8800FF #8800FF
bindsym $mod+9 workspace 9 ; exec notify-send -t 100 "9" ; client.focused #000000 #000000 #000000
bindsym $mod+0 workspace 10 ; exec notify-send -t 100 "10" ; client.focused #000000 #000000 #000000
# move focused container to workspace
bindsym $mod+Shift+KP_1 move container to workspace 1
bindsym $mod+Shift+KP_2 move container to workspace 2
bindsym $mod+Shift+KP_3 move container to workspace 3
bindsym $mod+Shift+KP_4 move container to workspace 4
bindsym $mod+Shift+KP_5 move container to workspace 5
bindsym $mod+Shift+KP_6 move container to workspace 6
bindsym $mod+Shift+KP_7 move container to workspace 7
bindsym $mod+Shift+KP_8 move container to workspace 8
bindsym $mod+Shift+KP_9 move container to workspace 9
bindsym $mod+Shift+KP_0 move container to workspace 10
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# window style and colors
# client.focused #FF0000 #FF0000 #FF0000 #FF0000 #FF0000
font pango:monospace 0
titlebar_border_thickness 1
titlebar_padding 1 1
default_border pixel 1
# client.focused #0F000F #0F000F80 #888888 #000000 #000000

# per workspace colors
# for_window [workspace="1"] client.unfocused #AA0000 #AA0000 #AA0000 #AA0000 #AA0000
# for_window [workspace="2"] client.focused #00FF00 #00FF00 #00FF00 #00FF00 #00FF00


# keyboard layout
# alternatively use:
#   swaymsg -t get_inputs
#   swaymsg "input 1:1:AT_Translated_Set_2_keyboard xkb_layout ab"
#   swaymsg "input type:keyboard xkb_layout ab"
#   swaymsg "input type:keyboard xkb_layout ab(russian)"
# cat /usr/share/X11/xkb/rules/xorg.lst | grep compose
# cat /usr/share/X11/xkb/rules/xorg.lst | grep grp
# man xkeyboard-config
#
# keyboard modifiers are shared between devices of same layout and repeat-info
# see `man sway-input` → 'keyboard_grouping' and `sudo libinput debug-events`
#
input type:keyboard {
    xkb_layout ab,ab(russian)
    xkb_options grp:win_space_toggle,compose:menu
#    xkb_options grp:ctrls_toggle,compose:menu → ctrls_toggle doesnt work and additionally it breaks flutter app ctrl+click
    repeat_delay 50000
    repeat_rate 30
}
input "76:620:Roberts_Tastatur" {
    xkb_options altwin:swap_alt_win,lv5:rwin_switch_lock
}

# exec swayidle timeout 600 lockscreen.py

# input "2:7:SynPS/2_Synaptics_TouchPad" {
input type:touchpad {
  tap enabled
  dwt disabled
  natural_scroll enabled
}
input "9317:25345:Microsoft_Corporation_Guest_Touchback_Board" {
  map_to_output "HDMI-A-1"
}
# swaymsg -t get_inputs
# swaymsg -t get_outputs
# man 5 sway-input

bindsym XF86MonBrightnessUp exec brillo -A 10
bindsym Shift+XF86MonBrightnessUp exec brillo -A 1
bindsym Ctrl+Shift+XF86MonBrightnessUp exec brillo -A .1
bindsym XF86MonBrightnessDown exec brillo -U 10
bindsym Shift+XF86MonBrightnessDown exec brillo -U 1
bindsym Ctrl+Shift+XF86MonBrightnessDown exec brillo -U .1

bindsym XF86AudioLowerVolume exec pactl set-sink-volume 0 -10%
bindsym Shift+XF86AudioLowerVolume exec pactl set-sink-volume 0 -2%
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume 0 +10%
bindsym Shift+XF86AudioRaiseVolume exec pactl set-sink-volume 0 +2%

# mute mic
bindsym $mod+m exec toggle_mic.py

bindsym XF86Sleep exec systemctl suspend
bindsym Ctrl+XF86Sleep exec systemctl hibernate

bindsym Print exec slurp | grim -g - ~/s.png
bindsym Shift+Print exec maim -s ~/s.png

# man 5 sway-bar
# bar {
#     status_command statusbar.py
#     position top
#     colors {
#         statusline #ffffff
#         background #00000000
#         inactive_workspace #00000000 #00000000 #200020
#         focused_workspace #00000000 #00000000 #ff0070
#     }
#     # disable system tray
#     tray_output none
# }
bindsym KP_enter exec statuswindow.py
for_window [title="^statuswindow$"] floating enable; sticky enable


# kill focused window
bindsym Mod1+f4 kill

# godot open scene as floating
for_window [instance="Godot_Engine"] floating enable ; move position 600 300
for_window [title="[Extension Development Host]"] resize set width 30 ppt

# panda3d window as floating
for_window [title="Panda"] floating enable

# python plot window as floating
for_window [title="float"] floating enable

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# exit sway (logs you out of your Wayland session)
bindsym $mod+Ctrl+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# bindsym $mod+b splith
# bindsym $mod+v splitv

# Switch the current container between different layout styles
# bindsym $mod+s layout stacking
bindsym $mod+Ctrl+w layout tabbed
bindsym $mod+Ctrl+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+Ctrl+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# # Swap focus between the tiling area and the floating area
# bindsym $mod+space focus mode_toggle

# # move focus to the parent container
# bindsym $mod+a focus parent

#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+Shift+j move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
bindsym $mod+j scratchpad show

#
# Resizing containers:
#
# mode "resize" {
#     bindsym Left resize shrink width 10px
#     bindsym Down resize grow height 10px
#     bindsym Up resize shrink height 10px
#     bindsym Right resize grow width 10px

#     # return to default mode
#     bindsym Return mode "default"
#     bindsym Escape mode "default"
# }
# bindsym $mod+r mode "resize"

include /etc/sway/config.d/*

exec notify-send -t 5000 "Welcome, Clue!"
